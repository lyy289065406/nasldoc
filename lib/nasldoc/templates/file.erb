<%
  def comment(name, type)
	filter1 = proc { |c| c.type == type }

	filter2 = case type
	when :export, :function
		Proc.new { |c| c.function == name }
	when :file
		Proc.new { |c| true }
	when :global
		Proc.new { |c| c.variables.include? name }
	end
	@comments.select(&filter1).select(&filter2).shift
  end
%>
<%
  def safe(obj, default, *attrs)
	attrs.each do |attr|
	  return default unless obj.respond_to? attr
	  obj = obj.send(attr)
	end

	obj
  end
%>

<%
  def overview_description()
    html = ''
    in_usage_sample = 0
    @overview.description.each do |paragraph|
      if paragraph =~ /Usage:/
        in_usage_sample = 1
        html += '<h3>Usage Example</h3>'
        html += '<script type="syntaxhighlighter" class="brush: nasl"><![CDATA['
        next
      end
      if not in_usage_sample
        html += '<p class="description">' + paragraph + '</p>'
      else
        html += paragraph + "\n"
      end
    end
    html += ']]></script>' unless not in_usage_sample
    html
  end
%>

<%

def colorize_variable_names(name)
	var_str = ''
	var_parts = name.split('::')
	if(var_parts.length == 1)
		return name
	end

	for i in 0..var_parts.length-2 do
		var_str += "<font color='#770877'>" + var_parts[i] + "</font><b>::</b>"
	end
	var_str += var_parts[var_parts.length-1]
	var_str	
end

def build_fn_name(name, colorize = 0)
	fn_str = ''
	if (!@functions[name][:namespace].nil?)
		if(colorize)
			fn_str += "<font color='#770877'>" + @functions[name][:namespace] + "</font><b>::</b>"
		else
			fn_str += @functions[name][:namespace] + "::"
		end
	end
	if (!@functions[name][:object].nil?)
		if(colorize)
			fn_str += "<font color='#B83E0D'>" + @functions[name][:object] + "</font><b>.</b>"
		else
			fn_str += @functions[name][:object] + "."
		end
	end
	if(colorize)
		color = "#50A40B"
		color = "#086E6E" if @functions[name][:fn_type] == "obj"
		fn_str += "<font color='#" + color + "'><b>" + @functions[name][:name] + "()</b></font>"
	else
		fn_str += @functions[name][:name]
	end
	fn_str
end
%>

<!DOCTYPE html>
<html lang="en">
  <head>
  <meta charset="utf-8">
  <title>nasldoc: nasl</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="">
  <meta name="author" content="">

  <!-- Le styles -->
  <style type="text/css">
	body {
	padding-top: 60px;
	padding-bottom: 40px;
	}
	.sidebar-nav {
	padding: 9px 0;
	}
  </style>

  <link href="css/bootstrap.min.css" rel="stylesheet">
  <link href="css/shCore.css" rel="stylesheet" type="text/css" />
  <link href="css/shThemeDefault.css" rel="stylesheet" type="text/css" />

  <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
  <!--[if lt IE 9]>
	<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->

  <!-- Fav and touch icons -->
  <link rel="shortcut icon" href="ico/favicon.ico">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="ico/apple-touch-icon-144-precomposed.png">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="ico/apple-touch-icon-114-precomposed.png">
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="ico/apple-touch-icon-72-precomposed.png">
  <link rel="apple-touch-icon-precomposed" href="ico/apple-touch-icon-57-precomposed.png">

	<script>
		function filterIncludes() {
		  // Declare variables
		  var input, filter, ul, li, a, i, txtValue;
		  input = document.getElementById('myInput');
		  filter = input.value.toUpperCase();
		  ul = document.getElementById("navList");
		  li = ul.getElementsByTagName('li');

		  // Loop through all list items, and hide those who don't match the search query
		  for (i = 0; i < li.length; i++) {
		    a = li[i].getElementsByTagName("a")[0];
		    txtValue = a.textContent || a.innerText;
		    if (txtValue.toUpperCase().indexOf(filter) > -1) {
		      li[i].style.display = "";
		    } else {
		      li[i].style.display = "none";
		    }
		  }
		}
		</script>
	
  </head>

  <body>

	<div class="navbar navbar-inverse navbar-fixed-top">
	  <div class="navbar-inner">
		<div class="container-fluid">
		  <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
		  </a>
		  <a class="brand" href="index.html">nasldoc</a>
		  <div class="nav-collapse collapse">
			<ul class="nav">
			  <li class="active"><a href="index.html">Home</a></li>
			</ul>
		  </div><!--/.nav-collapse -->
		</div>
	  </div>
	</div>

  <div class="container-fluid">
	<div class="row-fluid">
	<div class="span3">
	  <div class="well sidebar-nav">
	  <input type="text" id="myInput" onkeyup="filterIncludes()" placeholder="Search include names..">
	  <ul id="navList" class="nav nav-list">
		<% tmp_file_list = Array.new %>
		<% @file_list.each_with_index do |file, i| %>
			<% if tmp_file_list.include?(file) %>
			<% 	next %>
			<% end %>
			<% tmp_file_list << file %>
			<% row = i.even? ? 'even' : 'odd' %>
			<% link = url(file) %>
			<li class="<%= row %>">
				<a href="<%= link %>"><%= link.gsub('.html', '.inc') %></a>
			</li>
		<% end %>
		<% i = 0 %>
		<% Dir.entries(@options[:output_directory]).sort.each do |file|	%>
			<% if tmp_file_list.include?(file) %>
			<% 	next %>
			<% end %>
			<% tmp_file_list << file %>
			<% next if file == 'index.html' or !file.end_with? ".html" %>
			<% row = i.even? ? 'even' : 'odd' %>
			<li class="<%= row %>">
				<a href="<%= file %>"><%= file.gsub('.html', '.inc') %></a>
			</li>
			<% i = i + 1 %>
		<% end %>
	  </ul>
	  </div><!--/.well -->
	</div><!--/span-->
	<div class="span9">

		<a name="top"></a>
		<h1>Overview of <%= @current_file %></h1>
		<% unless @overview.nil? %>
		<% unless @overview.summary.nil? %>
		<p class="summary"><%= @overview.summary %></p>
		<% end %>
		<%= overview_description() %>

		<% if @overview.signed %>
			<h1>Signed</h1>
			<p>This library contains a signature, indicating that it is permitted to
			call trusted builtin functions.</p>
			<p class="warning">The signature on this library has not been checked, so
			there is no guarantee it will run in Nessus.</p>
		<% end %>

		<% unless @overview.includes.empty? %>

		<h1>Required Includes</h1>
		<p>These files must be included by the importing code.</p>
		<ul>
		  <% @overview.includes.sort.each do |inc| %>
		  <li><a href="<%= url(inc) %>"><%= inc %></a></li>
		  <% end %>
		</ul>
		<% end %>
		<% end %>

		<% unless @includes.empty? %>

		<h1>Automatic Includes</h1>
		<p>These files are automatically included by the library.</p>
		<ul>
		  <% @includes.each do |inc| %>
		  <li><a href="<%= url(inc) %>"><%= inc %></a></li>
		  <% end %>
		</ul>
		<% end %>

		<% {Public: @globs_pub, Private: @globs_prv}.each do |name, list| %>
		<% unless list.empty? %>

		<h1><%= name %> Variable Summary</h1>

		<% if name == :Public %>
		<p>Public variables are intended to be accessed by the code that imports
		this library.</p>
		<% else %>
		<p>Private variables are not intended to be accessed by the code that
		imports this library. There is no functional difference between private
		and public variables, only convention, and they may be accessed as
		normal. </p>
		<% end %>

		<table class="nopad">
		  <tr class="TableHeadingColor">
			<th>Name</th>
			<th>Summary</th>
		  </tr>
                  <% list.each do |name| %>
		  <tr>
			<td><a href="#<%= name.split('|')[0] %>"><%= colorize_variable_names(name.split('|')[0]) %></a></td>
			<td><%= safe(comment(name.split('|')[1], :global), "", :summary) %></td>
		  </tr>
		  <% end %>
		</table>
		<% end %>
		<% end %>

		<% {Public: @funcs_pub, Private: @funcs_prv}.each do |name, list| %>
		<% unless list.empty? %>
		<h1><%= name %> Function Summary</h1>

		<% if name == :Public %>
		<p>Public functions are intended to be called by the code that imports
		this library.</p>
		<% else %>
		<p>Private functions are not intended to be called by the code that
		imports this library. There is no functional difference between private
		and public functions, only convention, and they may be called as
		normal. </p>
		<% end %>

		<table class="nopad">
		  <tr class="TableHeadingColor">
			<th>Name</th>
			<th>Summary</th>
		  </tr>
		  <% list.keys.sort_by { |key| [@functions[key][:name_str]] }.each do |name| %>
		  <tr>
			<td><a href="#<%= build_fn_name(name) %>">
			<%= build_fn_name(name, 1) %>
			</a></td>
			<td><%= safe(comment(name, :function), "", :summary) %></td>
		  </tr>
		  <% end %>
		</table>
		<% end %>
		<% end %>

		<% {Public: @globs_pub, Private: @globs_prv}.each do |name, list| %>
		<% unless list.empty? %>
		<h1><%= name %> Variable Details</h1>
		<% list.each do |name| %>
		<h2 id="<%= name.split('|')[0] %>"><%= colorize_variable_names(name.split('|')[0]) %></h2>
		<% comm = comment(name.split('|')[1], :global) %>

		<% unless comm.nil? %>
		<% unless comm.summary.nil? %>

		<h3>Summary</h3>
		<p class="summary"><%= comm.summary %></p>
		<% end %>

		<% unless comm.description.empty? %>
		<h3>Description</h3>
			<% comm.description.each do |para| %>
				<p class="description"><%= para %></p>
			<% end %>
		<% end %>

		<% unless comm.remarks.empty? %>
			<h3>Remarks</h3>
				<% comm.remarks.each do |rem| %>
					<p class="remark"><%= rem.gsub('\n', '<br>') %></p>
				<% end %>
		<% end %>

		<% unless comm.deprecated.nil? %>
			<h3>Deprecated</h3>
			<p class="deprecated"><%= comm.deprecated %></p>
		<% end %>

		<% unless comm.nessus.nil? %>
			<h3>Nessus Version</h3>
			<p class="nessus"><%= comm.nessus %></p>
		<% end %>

		<% unless comm.categories.empty? %>
			<h3>Categories</h3>
			<ul>
				<% comm.categories.sort.each do |cat| %>
					<li><%= cat %></li>
				<% end %>
			</ul>
			<% end %>
		<% end %>

		<a href="#top">top</a>
		<hr>
		<% end %>
		<% end %>
		<% end %>

		<% {Public: @funcs_pub, Private: @funcs_prv}.each do |name, list| %>
		<% unless list.empty? %>
		<h1><%= name %> Function Details</h1>
		<% list.keys.sort.each do |name| %>
		<h2 id="<%= build_fn_name(name) %>"><%= @functions[name][:name] %></h2>
		<% comm = comment(name, :function) %>

		<% unless comm.nil? %>
		<% unless comm.summary.nil? %>
		<h3>Summary</h3>
		<p class="summary"><%= comm.summary %></p>
		<% end %>

		<% unless @functions[name][:namespace].nil? %>
		<h3>Namespace</h3>
                <p class="namespace"><%= @functions[name][:namespace] %></p>
		<% end %>

		<% unless @functions[name][:object].nil? %>
		<h3>Object</h3>
                <p class="object"><%= @functions[name][:object] %></p>
		<% end %>
		
		<% unless comm.description.empty? %>
		<h3>Description</h3>
		<% comm.description.each do |para| %>
		<p class="description"><%= para %></p>
		<% end %>
		<% end %>

		<% unless comm.remarks.empty? %>
		<h3>Remarks</h3>
		<% comm.remarks.each do |rem| %>
		<p class="remark"><%= rem %></p>
		<% end %>
		<% end %>

		<% unless comm.deprecated.nil? %>
		<h3>Deprecated</h3>
		<p class="deprecated"><%= comm.deprecated %></p>
		<% end %>

		<% unless comm.nessus.nil? %>
		<h3>Nessus Version</h3>
		<p class="nessus"><%= comm.nessus %></p>
		<% end %>

		<% unless comm.categories.empty? %>
		<h3>Categories</h3>
		<ul>
		<% comm.categories.sort.each do |cat| %>
		<li><%= cat %></li>
		<% end %>
		</ul>
		<% end %>

		<% unless comm.anonparams.empty? %>
		<h3>Anonymous Parameters</h3>
		<dl>
		<% comm.anonparams.sort.each do |name, block| %>
		  <dt><%= name %><% unless !comm.anonparams_type.has_key?(name) %><font color="#d14"> (<%= comm.anonparams_type[name] %>)</font>
		  <% end %></dt>
		  <dd><%= block %></dd>
		<% end %>
		</dl>
		<% end %>
		<% end %>

		<% unless @functions[name].nil? || @functions[name].empty? %>
		<h3>Named Parameters</h3>
		<dl>

		<% @functions[name][:params].sort.each do |param| %>
			<dt><%= param.name %>
			<% unless comm.nil? || !comm.params_type.has_key?(param.name) %><font color="#d14"> (<%= comm.params_type[param.name] %>)</font>
			<% end %></dt>
			<% unless comm.nil? || !comm.params.has_key?(param.name) %>
			<dd><%= comm.params[param.name] %></dd>
		  <% end %>
		<% end %>
		</dl>
		<% end %>

		<% unless comm.nil? || comm.return.nil? %>
		<h3>Return Value</h3>
		<p class="return"><%= comm.return %></p>
		<% end %>

		<h3>Code</h3>
                <!-- The contents must not have indentation, else formatting is off. -->
<script type="syntaxhighlighter" class="brush: nasl"><![CDATA[ 
<% unless @functions[name][:code].nil? %>
<%= @functions[name][:code] %>
<% end %>
]]></script>
		<a href="#top">top</a>
		<hr>
		<% end %>
		<% end %>
		<% end %>

	</div><!--/span-->
	</div><!--/row-->

	<hr>

	<footer>
		<p>&copy; Tenable Network Security <%= Time.new.year %></p>
	</footer>

  </div><!--/.fluid-container-->

  <!-- Le javascript
  ================================================== -->
  <!-- Placed at the end of the document so the pages load faster -->
  <script type="text/javascript" src="js/jquery-1.8.2.js"></script>
  <script type="text/javascript" src="js/bootstrap.min.js"></script>
  <script type="text/javascript" src="js/shCore.js"></script>
  <script type="text/javascript" src="js/shBrushNasl.js"></script>

  <script type="text/javascript">
    SyntaxHighlighter.defaults['collapse'] = true;
    SyntaxHighlighter.defaults['gutter'] = false;
    SyntaxHighlighter.all();
  </script>

  </body>
</html>
